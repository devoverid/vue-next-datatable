"use strict";(self.webpackChunkvue_next_datatable_docs=self.webpackChunkvue_next_datatable_docs||[]).push([[325],{9121:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-5c19916c",path:"/options/",title:"Options API",lang:"en-US",frontmatter:{lang:"en-US",title:"Options API",description:"Vue Next Datatable options."},excerpt:"",headers:[],filePathRelative:"options/README.md",git:{updatedTime:1630208983e3,contributors:[{name:"zuramai",email:"ahmadsaugigis@yahoo.com",commits:1}]}}},5073:(n,a,s)=>{s.r(a),s.d(a,{default:()=>e});const t=(0,s(6252).uE)('<h1 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h1><p>These are options object that you can pass when using the library.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> \n    debug<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// ... your another options goes here</span>\n<span class="token punctuation">}</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>NextDatatable<span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>You can use options in a single component usage. This will override the default options that you passed when installed via <code>app.use()</code></p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NextDatatable</span> <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ debug: true }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',5),e={render:function(n,a){return t}}}}]);